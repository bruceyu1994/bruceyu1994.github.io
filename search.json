[{"title":"test","url":"https://bruceyu1994.github.io/2016/10/23/test/","content":"<p>測試博客</p>\n"},{"title":"Fexo","url":"https://bruceyu1994.github.io/2016/10/22/Fexo/","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Fexo是Hexo的一款极简主题之一</p>\n<h2 id=\"自定义Fexo\"><a href=\"#自定义Fexo\" class=\"headerlink\" title=\"自定义Fexo\"></a>自定义Fexo</h2><h3 id=\"添加评论数量显示\"><a href=\"#添加评论数量显示\" class=\"headerlink\" title=\"添加评论数量显示\"></a>添加评论数量显示</h3><h4 id=\"添加显示的代码段\"><a href=\"#添加显示的代码段\" class=\"headerlink\" title=\"添加显示的代码段\"></a>添加显示的代码段</h4><p>首先,确认你的评论系统用的是多说,如果不是,那就不用继续往下看了</p>\n<p>在fexo/layout/_partial/article.esj的header标签内的div标签中添加如下代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;% <span class=\"keyword\">if</span> (theme.duoshuo_shortname)&#123; %&gt;</div><div class=\"line\">&lt;i class=\"icon-comment\"&gt;&lt;/i&gt; </div><div class=\"line\">&lt;span <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"ds-thread-count\"</span> data-thread-key=<span class=\"string\">\"&lt;%= url %&gt;\"</span>&gt;&lt;i class=\"fa fa-spinner fa-spin\"&gt;&lt;/i&gt;&lt;/span&gt;条评论</div><div class=\"line\">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure>\n<p>尤其注意data-thread-key的设置,它和你之前配置多说的时候是一致的,每篇文章有一个独一无二的key。</p>\n<p>Fexo已经集成了多说，fexo/layout/_partial/component/duoshuo.ejs文件中，我们可以看到</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">data-thread-key=<span class=\"string\">\"&lt;%= url %&gt;\"</span></div></pre></td></tr></table></figure>\n<p>注：</p>\n<ul>\n<li><p>不是fexo/layout/_partial/duoshuo.ejs文件</p>\n</li>\n<li><p>使用<code>class=&quot;fa fa-spinner fa-spin&quot;</code>图标(没加载出来前就显示个菊花转转转)，需要引入引入font-awesome字体，在fexo/layout/_partial/head.esj中head标签中添加如下引用</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"//cdn.bootcss.com/font-awesome/4.3.0/css/font-awesome.min.css\"</span>&gt;</span></div></pre></td></tr></table></figure>\n<h4 id=\"多说自定义文本设置\"><a href=\"#多说自定义文本设置\" class=\"headerlink\" title=\"多说自定义文本设置\"></a>多说自定义文本设置</h4><p>主要设置三个参数：暂无评论，1条评论，{num}条评论</p>\n<p>设置结果如下所示：</p>\n<center><br><img src=\"https://coding.net/u/bruceyu1994/p/Images/git/raw/master/fexo/%25E5%25A4%259A%25E8%25AF%25B4%25E8%2587%25AA%25E5%25AE%259A%25E4%25B9%2589%25E6%2596%2587%25E6%259C%25AC.png\" alt=\"多说自定义文本设置\"><br></center>\n\n<h4 id=\"查看运行结果\"><a href=\"#查看运行结果\" class=\"headerlink\" title=\"查看运行结果\"></a>查看运行结果</h4><center><br><img src=\"https://coding.net/u/bruceyu1994/p/Images/git/raw/master/fexo/%25E8%25BF%2590%25E8%25A1%258C%25E7%25BB%2593%25E6%259E%259C01.png\" alt=\"fexo主题添加评论数运行结果01\"><br></center>\n\n<p>发现无法显示访问数，没有达到预期的效果，顿时要崩溃了</p>\n<h4 id=\"一线生机\"><a href=\"#一线生机\" class=\"headerlink\" title=\"一线生机\"></a>一线生机</h4><p>查看多说官方文档，有如下发现：</p>\n<blockquote>\n<p>data-thread-key中:和,即冒号和逗号有特别的用途，请不要使用url或其他有这两个符号的内容作为data-thread-key。</p>\n</blockquote>\n<p><a href=\"http://dev.duoshuo.com/docs/5003ecd94cab3e7250000008\" target=\"_blank\" rel=\"external\">评论框调用代码参数说明</a></p>\n<p>Fexo主题默认的多说data-thread-key是url,包含”:”,这是Fexo主题的一大不足</p>\n<h4 id=\"重拾信心\"><a href=\"#重拾信心\" class=\"headerlink\" title=\"重拾信心\"></a>重拾信心</h4><p>将fexo/layout/_partial/component/duoshuo.ejs文件中data-thread-key改为如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 多说评论框 start --&gt;</div><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ds-thread\"</span> <span class=\"attr\">data-thread-key</span>=<span class=\"string\">\"&lt;%= page.layout %&gt;-&lt;%= page.slug %&gt;\"</span> </span></span></div><div class=\"line\"><span class=\"attr\">data-title</span>=<span class=\"string\">\"&lt;%= page.title %&gt;\"</span> <span class=\"attr\">data-url</span>=<span class=\"string\">\"&lt;%= url %&gt;\"</span>&gt;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">&lt;!-- 多说评论框 end --&gt;</div></pre></td></tr></table></figure>\n<p>将fexo/layout/_partial/article.esj的header标签内的div标签中评论显示代码改为如下：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;% <span class=\"keyword\">if</span> (theme.duoshuo_shortname)&#123; %&gt;</div><div class=\"line\">\t<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon-comment\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span> </div><div class=\"line\">\t&lt;span <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"ds-thread-count\"</span> data-thread-key=<span class=\"string\">\"&lt;%= page.layout %&gt;-&lt;%= page.slug %&gt;\"</span>&gt;</div><div class=\"line\">\t<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fa fa-spinner fa-spin\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span> 条评论</div><div class=\"line\">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure></p>\n<p>运行观察结果,成功！</p>\n<center><br><img src=\"https://coding.net/u/bruceyu1994/p/Images/git/raw/master/fexo/%25E8%25BF%2590%25E8%25A1%258C%25E7%25BB%2593%25E6%259E%259C02.png\" alt=\"fexo主题添加评论数运行结果01\"><br></center>\n\n<h3 id=\"添加访问量显示\"><a href=\"#添加访问量显示\" class=\"headerlink\" title=\"添加访问量显示\"></a>添加访问量显示</h3><p>关于访问量统计这事儿,静态博客不太好搞,我找到了这个<a href=\"http://ibruce.info/2015/04/04/busuanzi/\" target=\"_blank\" rel=\"external\">不蒜子</a>,这位非著名码农自己做的访问统计,哈哈,点个赞</p>\n<h4 id=\"安装脚本\"><a href=\"#安装脚本\" class=\"headerlink\" title=\"安装脚本\"></a>安装脚本</h4><p>在fexo/layout/_partial/head.esj文件的head标签中引入不算子js文件</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">async</span> <span class=\"attr\">src</span>=<span class=\"string\">\"//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js\"</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure>\n<h4 id=\"安装标签\"><a href=\"#安装标签\" class=\"headerlink\" title=\"安装标签\"></a>安装标签</h4><p>在fexo/layout/_partial/article.esj的header标签内的div标签中添加如下代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">theme.busuanzi</span>)&#123; %&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fa fa-eye\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span> </div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"busuanzi_container_page_pv\"</span>&gt;</span></div><div class=\"line\">   &amp;nbsp热度 <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"busuanzi_value_page_pv\"</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fa fa-spinner fa-spin\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>℃</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></div></pre></td></tr></table></figure>\n<p>注：&amp;nbsp表示空格，是爲了增加”fa fa-eye” icon 與“熱度”的距離</p>\n<h4 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h4><p>hexo/_config.yml添加如下设置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 不算子 站点访问量及文章访问量统计</span></div><div class=\"line\"><span class=\"attr\">busuanzi:</span> <span class=\"literal\">true</span></div></pre></td></tr></table></figure>\n<p>至此大功告成，运行结果如上图所示！</p>\n<h2 id=\"小技巧\"><a href=\"#小技巧\" class=\"headerlink\" title=\"小技巧\"></a>小技巧</h2><p>如上述的font-awesome字体库,若要查看网址链接的CSS有哪些class icon图标,可以通过开发者工具将CSS文件下载到本地，一般CSS样式是压缩过的，可以用sublime的HTML-CSS-JS Prettify插件，将css代码格式化(只需右击选择HTML/CSS/JS Prettify -&gt; Prettify Code即可)，再查找有哪些class icon。</p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ol>\n<li><a href=\"http://bblove.me/2015/05/30/hexo-setting-with-comments-and-visitors/\" target=\"_blank\" rel=\"external\">给hexo配置上评论和访问量</a></li>\n<li><a href=\"http://dev.duoshuo.com/docs/5003ecd94cab3e7250000008\" target=\"_blank\" rel=\"external\">多说官方文档：评论框调用代码参数说明</a></li>\n<li><a href=\"http://ibruce.info/2015/04/04/busuanzi/\" target=\"_blank\" rel=\"external\">不算子</a></li>\n<li><a href=\"https://bruceyu1994.github.io/2016/10/22/Fexo/\">我的博客展示地址</a></li>\n</ol>\n"},{"title":"正則表達式","url":"https://bruceyu1994.github.io/2016/10/16/正則表達式/","content":"<h2 id=\"匹配任意字符\"><a href=\"#匹配任意字符\" class=\"headerlink\" title=\"匹配任意字符\"></a>匹配任意字符</h2><p>使用([\\s\\S]*)</p>\n<p>注：</p>\n<blockquote>\n<p>此不同于(.*),(.*)不匹配换行符\\n, 而\\s匹配任何空白字符，包括空格、制表符、换页符等等,\\S匹配任何非空白字符,合起来，([\\s\\S]*)可匹配任意字符</p>\n</blockquote>\n"},{"title":"Fiddler常見問題","url":"https://bruceyu1994.github.io/2016/10/16/Fiddler常見問題/","content":"<h2 id=\"无法显示会话结果\"><a href=\"#无法显示会话结果\" class=\"headerlink\" title=\"无法显示会话结果\"></a>无法显示会话结果</h2><p>可能是编码原因，一般Fiddler也会提示：</p>\n<blockquote>\n<p>“Response body is encoded. Click to decoded”</p>\n</blockquote>\n<p>只需点击提示按钮即可显示get到的信息，或者选择对应的Session，右击选择“decode selected session”即可。</p>\n"},{"title":"Android基本概念和語法","url":"https://bruceyu1994.github.io/2016/10/16/Android基本概念和語法/","content":"<h2 id=\"1-什么是Intent\"><a href=\"#1-什么是Intent\" class=\"headerlink\" title=\"1. 什么是Intent?\"></a>1. 什么是Intent?</h2><p>Intent的中文意思是“意图，意向”，在Android中提供了Intent机制来协助应用间的交互与通讯，Intent负责对应用中一次操作的动作、动作涉及数据、附加数据进行描述，Android则根据此Intent的描述，负责找到对应的组件，将 Intent传递给调用的组件，并完成组件的调用。Intent不仅可用于应用程序之间，也可用于应用程序内部的Activity/Service之间的交互。</p>\n<h2 id=\"2-什么是Bundle\"><a href=\"#2-什么是Bundle\" class=\"headerlink\" title=\"2. 什么是Bundle?\"></a>2. 什么是Bundle?</h2><p>键值对类</p>\n<h2 id=\"3-Intent如何传递数据？\"><a href=\"#3-Intent如何传递数据？\" class=\"headerlink\" title=\"3. Intent如何传递数据？\"></a>3. Intent如何传递数据？</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">//发送端</div><div class=\"line\">Intent intent = new Intent();</div><div class=\"line\">intent.setClass(Login.this, MainActivity.class);</div><div class=\"line\">Bundle bundle = new Bundle();</div><div class=\"line\">bundle.putSerializable(&quot;user&quot;, user);</div><div class=\"line\">intent.putExtras(bundle);</div><div class=\"line\">this.startActivity(intent);</div><div class=\"line\"></div><div class=\"line\">//接收端</div><div class=\"line\">Intent intent = this.getIntent(); </div><div class=\"line\">user=(User)intent.getSerializableExtra(&quot;user&quot;);</div></pre></td></tr></table></figure>\n<h2 id=\"4-id不能在string-xml中定义\"><a href=\"#4-id不能在string-xml中定义\" class=\"headerlink\" title=\"4. id不能在string.xml中定义\"></a>4. id不能在string.xml中定义</h2><p>控件id的格式：”@+id/id名”</p>\n<h2 id=\"5-onActivityResult-方法\"><a href=\"#5-onActivityResult-方法\" class=\"headerlink\" title=\"5. onActivityResult()方法\"></a>5. onActivityResult()方法</h2><p>在onActivityResult(int requestCode, int resultCode, Intent data)方法中有现成的Intent,即data,无需通过getIntent获取Intent,再通過Intent獲取數據</p>\n<h2 id=\"6-Android-Studio如何导入jar包\"><a href=\"#6-Android-Studio如何导入jar包\" class=\"headerlink\" title=\"6. Android Studio如何导入jar包\"></a>6. Android Studio如何导入jar包</h2><ol>\n<li>复制你需要添加的jar，并将其黏贴到app –&gt; libs文件夹下</li>\n<li>右键点击新添加的jar，在弹出菜单中点击Add As Library</li>\n</ol>\n<h2 id=\"7-SocketException\"><a href=\"#7-SocketException\" class=\"headerlink\" title=\"7. SocketException\"></a>7. SocketException</h2><p>具體異常：<br>java.net.SocketException: socket failed: EACCES (Permission denied)</p>\n<p>说明：缺少网络访问权限 </p>\n<p>解决方案：<br>在AndroidManifest.xml中添加<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"8-添加权限的两种方式\"><a href=\"#8-添加权限的两种方式\" class=\"headerlink\" title=\"8. 添加权限的两种方式\"></a>8. 添加权限的两种方式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//第一种方式</div><div class=\"line\">&lt; uses-permission   android:name =”android.permission.INTERNET”  /&gt;  </div><div class=\"line\">//第二种方式</div><div class=\"line\">&lt; application   android:permission =”android.permission.INTERNET” /&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"9-NetworkOnMainThreadException\"><a href=\"#9-NetworkOnMainThreadException\" class=\"headerlink\" title=\"9. NetworkOnMainThreadException\"></a>9. NetworkOnMainThreadException</h2><p>具體異常：<br>android.os.NetworkOnMainThreadException</p>\n<p>说明:不允许在主线程中进行网络访问</p>\n<p>解决方案：将网络访问的操作单独放到一个线程中</p>\n<h2 id=\"10-gbk与gb2312的区别？\"><a href=\"#10-gbk与gb2312的区别？\" class=\"headerlink\" title=\"10. gbk与gb2312的区别？\"></a>10. gbk与gb2312的区别？</h2><p>GB2312是中国规定的汉字编码，也可以说是简体中文的字符集编码;GBK 是 GB2312的扩展 ,除了兼容GB2312外，它还能显示繁体中文，还有日文的假名</p>\n<h2 id=\"11-GridView-表格布局-？\"><a href=\"#11-GridView-表格布局-？\" class=\"headerlink\" title=\"11. GridView(表格布局)？\"></a>11. GridView(表格布局)？</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">android:numColumns=”auto_fit” ，GridView的列数设置为自动</div><div class=\"line\">android:columnWidth=”90dp”，每列的宽度，也就是Item的宽度</div><div class=\"line\">android:stretchMode=”columnWidth”，缩放与列宽大小同步</div></pre></td></tr></table></figure>\n<h2 id=\"12-HashMap与Map区别？\"><a href=\"#12-HashMap与Map区别？\" class=\"headerlink\" title=\"12. HashMap与Map区别？\"></a>12. HashMap与Map区别？</h2><p>hashmap是继承map接口的实现类</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Map&lt;bluh&gt; map1 = new HashMap&lt;bluh&gt;();</div><div class=\"line\">HashMap&lt;bluh&gt; map2 = new HashMap&lt;bluh&gt;();</div></pre></td></tr></table></figure>\n<p>説明：</p>\n<ol>\n<li>定义为Map之后更灵活 今后才有可能在需要的时候替换为HashMap之外的其它实现如TreeMap等，同时如Joshua Bloch等大师也倡导面向接口编程(code to interfaces)</li>\n<li>有得必有失，第一种的tradeoff就是无法调用HashMap特有的方法</li>\n</ol>\n<h2 id=\"13-SimpleAdapter\"><a href=\"#13-SimpleAdapter\" class=\"headerlink\" title=\"13. SimpleAdapter\"></a>13. SimpleAdapter</h2><p>構造函數：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">SimpleAdapter(Context context, List&lt;? extends Map&lt;String, ?&gt;&gt; data, int resource, String[] from, int[] to)</div></pre></td></tr></table></figure>\n<ol>\n<li><p>SimpleAdapter是扩展性最好的适配器，可以定义各种你想要的布局，而且使用很方便</p>\n</li>\n<li><p>參數含義</p>\n<ul>\n<li>context：上下文，比如this。关联SimpleAdapter运行的视图上下文</li>\n<li>data：Map列表，列表要显示的数据，这部分需要自己实现，如例子中的getData()类型要与上面的一致，每条项目要与from中指定条目一致</li>\n<li>resource：ListView单项布局文件的Id,这个布局就是你自定义的布局了，你想显示什么样子的布局都在这个布局中。这个佈局中必须包括了to中定义的控件id</li>\n<li>from：一个被添加到Map上关联每一个项目列名称的列表，数组里面是列名称</li>\n<li>to：是一个int数组，数组里面的id是自定义布局中各个控件的id，需要与上面的from对应</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"14-List-ArrayList-LinkedList區別？\"><a href=\"#14-List-ArrayList-LinkedList區別？\" class=\"headerlink\" title=\"14. List, ArrayList, LinkedList區別？\"></a>14. List, ArrayList, LinkedList區別？</h2><ol>\n<li>LinkedList: 双向列表：表中的每个节点都包含了对前一个和后一个元素的引用</li>\n<li>ArrayList和LinkedList的大致区别： <ul>\n<li>ArrayList是实现了基于动态数组的数据结构，LinkedList基于链表的数据结构。 </li>\n<li>对于随机访问get和set，ArrayList觉得优于LinkedList，因为LinkedList要移动指针。 </li>\n<li>对于新增和删除操作add和remove，LinedList比较占优势，因为ArrayList要移动数据。 </li>\n<li>List是一个接口 ArrayList是List接口下的一个实现类</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"15-ArrayAdapter和BaseAdapter区别？\"><a href=\"#15-ArrayAdapter和BaseAdapter区别？\" class=\"headerlink\" title=\"15. ArrayAdapter和BaseAdapter区别？\"></a>15. ArrayAdapter和BaseAdapter区别？</h2><p>ArrayAdapter是从BaseAdapter派生出来的，具备BaseAdapter的所有功能，但ArrayAdapter更为强大，它实例化时可以直接使用泛型构造，同时ArrayAdapter可以实现像数组一样的操作</p>\n<h2 id=\"16-final类有什么特别之处？\"><a href=\"#16-final类有什么特别之处？\" class=\"headerlink\" title=\"16. final类有什么特别之处？\"></a>16. final类有什么特别之处？</h2><ul>\n<li>final类不能被继承，没有子类，final类中的方法默认是final的。 </li>\n<li>final方法不能被子类的方法覆盖，但可以被继承。 </li>\n<li>final成员变量表示常量，只能被赋值一次，赋值后值不再改变。 </li>\n<li>final不能用于修饰构造方法。</li>\n<li>final变量定义的时候，可以先声明，而不给初值，这中变量也称为final空白，无论什么情况，编译器都确保空白final在使用之前必须被初始化。但是，final空白在final的使用上提供了更大的灵活性，为此，一个类中的final数据成员就可以实现依对象而有所不同，却有保持其恒定不变的特征。</li>\n<li>当函数参数为final类型时，你可以读取使用该参数，但是无法改变该参数的值。</li>\n</ul>\n<h2 id=\"17-CharSequence与String的区别？\"><a href=\"#17-CharSequence与String的区别？\" class=\"headerlink\" title=\"17. CharSequence与String的区别？\"></a>17. CharSequence与String的区别？</h2><p>String 是java中的字符串，它继承于CharSequence。</p>\n<ul>\n<li><p>拓展</p>\n<p>  StringBuilder和StringBuffer都是可变的字符序列。它们都继承于AbstractStringBuilder，实现了CharSequence接口。StringBuilder是非线程安全的，而StringBuffer是线程安全的</p>\n</li>\n</ul>\n<h2 id=\"18-Display-getWidth-和Display-getHeight-已被废弃\"><a href=\"#18-Display-getWidth-和Display-getHeight-已被废弃\" class=\"headerlink\" title=\"18. Display.getWidth()和Display.getHeight()已被废弃\"></a>18. Display.getWidth()和Display.getHeight()已被废弃</h2><p>替代方法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">DisplayMetrics dm = new DisplayMetrics();</div><div class=\"line\">getWindowManager().getDefaultDisplay().getMetrics(dm);</div><div class=\"line\">SCREEN_WIDTH = dm.widthPixels;</div><div class=\"line\">SCREEN_HEIGHT = dm.heightPixels;</div></pre></td></tr></table></figure></p>\n<h2 id=\"19-StringTokenizer是什么类型？\"><a href=\"#19-StringTokenizer是什么类型？\" class=\"headerlink\" title=\"19. StringTokenizer是什么类型？\"></a>19. StringTokenizer是什么类型？</h2><p>用来分隔String的应用类，与split函数相似</p>\n<h2 id=\"20-ListView却没有刷新？\"><a href=\"#20-ListView却没有刷新？\" class=\"headerlink\" title=\"20. ListView却没有刷新？\"></a>20. ListView却没有刷新？</h2><p>ListView中的数据对象始终都只能有一个，不能重新new一个新的List对象</p>\n<h2 id=\"21-注册上下文菜单？\"><a href=\"#21-注册上下文菜单？\" class=\"headerlink\" title=\"21. 注册上下文菜单？\"></a>21. 注册上下文菜单？</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Override</div><div class=\"line\">public void onCreateContextMenu(ContextMenu menu, View v,</div><div class=\"line\">        ContextMenuInfo menuInfo) &#123;</div><div class=\"line\">    menu.setHeaderIcon(R.drawable.header);</div><div class=\"line\">    switch (v.getId()) &#123;</div><div class=\"line\">    case R.id.editText01:</div><div class=\"line\">        menu.add(0, MENU1, 0, &quot;菜单项1&quot;);</div><div class=\"line\">        menu.add(0, MENU2, 0, &quot;菜单项2&quot;);</div><div class=\"line\">        menu.add(0, MENU3, 0, &quot;菜单项3&quot;);</div><div class=\"line\">        break;</div><div class=\"line\">    case R.id.editText02:</div><div class=\"line\">        menu.add(0, MENU4, 0, &quot;菜单项4&quot;);</div><div class=\"line\">        menu.add(0, MENU5, 0, &quot;菜单项5&quot;);</div><div class=\"line\">        break;</div><div class=\"line\">    &#125;</div><div class=\"line\">    //super.onCreateContextMenu(menu, v, menuInfo);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@Override</div><div class=\"line\">public boolean onContextItemSelected(MenuItem item) &#123;</div><div class=\"line\">    switch (item.getItemId()) &#123;</div><div class=\"line\">    case MENU1:</div><div class=\"line\">    case MENU2:</div><div class=\"line\">    case MENU3:</div><div class=\"line\">        editText01.append(&quot;\\n&quot;+item.getTitle()+&quot;被按下&quot;);</div><div class=\"line\">        break;</div><div class=\"line\">    case MENU4:</div><div class=\"line\">    case MENU5:</div><div class=\"line\">        editText02.append(&quot;\\n&quot;+item.getTitle()+&quot;被按下&quot;);</div><div class=\"line\">        break;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return true;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>添加上下文菜单方法：</p>\n<p>方法簽名：public MenuItem add(int groupId, int itemId, int order, CharSequence title)</p>\n<p>参数解析：</p>\n<ul>\n<li>第一个int类型的group ID参数，代表的是组概念，你可以将几个菜单项归为一组，以便更好的以组的方式管理你的菜单按钮。</li>\n<li>第二个int类型的item ID参数，代表的是项目编号。这个参数非常重要，一个item ID对应一个menu中的选项。在后面使用菜单的时候，就靠这个item ID来判断你使用的是哪个选项。</li>\n<li>第三个int类型的order ID参数，代表的是菜单项的显示顺序。默认是0，表示菜单的显示顺序就是按照add的显示顺序来显示。</li>\n<li>第四个String类型的title参数，表示选项中显示的文字。</li>\n</ul>\n</blockquote>\n<h2 id=\"22-Handler怎么用？\"><a href=\"#22-Handler怎么用？\" class=\"headerlink\" title=\"22. Handler怎么用？\"></a>22. Handler怎么用？</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">myHandler = new Handler() &#123;</div><div class=\"line\">        @Override</div><div class=\"line\">        public void handleMessage(Message msg) &#123;</div><div class=\"line\">            super.handleMessage(msg);</div><div class=\"line\">            switch (msg.what) &#123;</div><div class=\"line\">                case MESSAGE_UPDATE_UI:</div><div class=\"line\">                    do...</div><div class=\"line\">                    break;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">//发送消息</div><div class=\"line\">Message message = new Message();</div><div class=\"line\">message.what = MESSAGE_UPDATE_UI;</div><div class=\"line\">myHandler.sendMessage(message);</div></pre></td></tr></table></figure>\n<h2 id=\"23-返回键监听实现\"><a href=\"#23-返回键监听实现\" class=\"headerlink\" title=\"23. 返回键监听实现\"></a>23. 返回键监听实现</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Override</div><div class=\"line\">public boolean onKeyDown(int keyCode, KeyEvent event) &#123;</div><div class=\"line\">    if (keyCode == KeyEvent.KEYCODE_BACK) &#123;</div><div class=\"line\">        doKeyBack();</div><div class=\"line\">        return false;</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">        return super.onKeyDown(keyCode, event);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//注：必须把return super.onKeyDown(keyCode, event)放到else中，或者直接删除，否则重写方法将会无效</div></pre></td></tr></table></figure>\n<h2 id=\"24-subString-begin-end\"><a href=\"#24-subString-begin-end\" class=\"headerlink\" title=\"24. subString(begin,end)\"></a>24. subString(begin,end)</h2><p>説明：返回begin到end-1位置的字符串</p>\n<h2 id=\"25-单例模式\"><a href=\"#25-单例模式\" class=\"headerlink\" title=\"25. 单例模式\"></a>25. 单例模式</h2><p>分类：饿汉式，懒汉式，登记式</p>\n<h2 id=\"26-与SD卡操作有关的权限\"><a href=\"#26-与SD卡操作有关的权限\" class=\"headerlink\" title=\"26. 与SD卡操作有关的权限\"></a>26. 与SD卡操作有关的权限</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!– 在SDCard中创建与删除文件权限 –&gt;</div><div class=\"line\">&lt;uses-permission</div><div class=\"line\">android:name=”android.permission.MOUNT_UNMOUNT_FILESYSTEMS”/&gt;</div><div class=\"line\">&lt;!– 往SDCard写入数据权限 –&gt;</div><div class=\"line\">&lt;uses-permission</div><div class=\"line\">android:name=”android.permission.WRITE_EXTERNAL_STORAGE”/&gt;</div><div class=\"line\">&lt;!– 读取SDCard数据权限 –&gt;</div><div class=\"line\">&lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot; /&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"27-FileNotFoundException\"><a href=\"#27-FileNotFoundException\" class=\"headerlink\" title=\"27. FileNotFoundException\"></a>27. FileNotFoundException</h2><p>具體異常：</p>\n<blockquote>\n<p>java.io.FileNotFoundException: /storage/emulated/0report-1.doc: open failed: EACCES (Permission denied)<br>Caused by: android.system.ErrnoException: open failed: EACCES (Permission denied)</p>\n</blockquote>\n<p>原因：路径问题，Environment.getExternalStorageDirectory().getPath()获得路径结尾不含”/“,所以在構造文件路徑時，需在末尾添加“/”，再連接文件名</p>\n<p>注：涉及到文件传输时，一定要注意路径，很多时候都是因为路径不对才引起异常等错误。</p>\n<h2 id=\"28-Android-Studio-Build失败\"><a href=\"#28-Android-Studio-Build失败\" class=\"headerlink\" title=\"28. Android Studio Build失败\"></a>28. Android Studio Build失败</h2><p>有时Manifest文件有错误，可能会Build失败。出现cannot resolve symbol R 的错误</p>\n<h2 id=\"29-FileNotFoundException\"><a href=\"#29-FileNotFoundException\" class=\"headerlink\" title=\"29. FileNotFoundException\"></a>29. FileNotFoundException</h2><p>具體異常：</p>\n<blockquote>\n<p>java.io.FileNotFoundException: /systemreport-1.doc: open failed: EROFS (Read-only file system)<br>Caused by: android.system.ErrnoException: open failed: EROFS (Read-only file system)</p>\n</blockquote>\n<p>原因：文件夹为只读，檢查文件路徑是否正確</p>\n<h2 id=\"30-选择本地文件？\"><a href=\"#30-选择本地文件？\" class=\"headerlink\" title=\"30. 选择本地文件？\"></a>30. 选择本地文件？</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\">//调用系统文件选择器选择文件</div><div class=\"line\">private void showFileChooser() &#123;</div><div class=\"line\">    Intent intent = new Intent(Intent.ACTION_GET_CONTENT); </div><div class=\"line\">    intent.setType(&quot;*/*&quot;); </div><div class=\"line\">    intent.addCategory(Intent.CATEGORY_OPENABLE);</div><div class=\"line\"> </div><div class=\"line\">    try &#123;</div><div class=\"line\">        startActivityForResult( Intent.createChooser(intent, &quot;Select a File to Upload&quot;), FILE_SELECT_CODE);</div><div class=\"line\">    &#125; catch (android.content.ActivityNotFoundException ex) &#123;</div><div class=\"line\">        Toast.makeText(this, &quot;Please install a File Manager.&quot;,  Toast.LENGTH_SHORT).show();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//接收选择的文件</div><div class=\"line\">    @Override</div><div class=\"line\">protected void onActivityResult(int requestCode, int resultCode, Intent data) &#123;</div><div class=\"line\">    super.onActivityResult(requestCode, resultCode, data);</div><div class=\"line\">    switch (requestCode) &#123;</div><div class=\"line\">        case FILE_SELECT_CODE:</div><div class=\"line\">            if (resultCode == RESULT_OK) &#123;</div><div class=\"line\">                // Get the Uri of the selected file</div><div class=\"line\">                Uri uri = data.getData();</div><div class=\"line\">                localPath = FileUtils.getPath(this, uri);</div><div class=\"line\">                Toast.makeText(this, &quot;选择文件成功&quot;, Toast.LENGTH_SHORT).show();</div><div class=\"line\">                Message msg = new Message();</div><div class=\"line\">                msg.what = FILE_SELECT_SUCCESS;</div><div class=\"line\">                myHandler.sendMessage(msg);</div><div class=\"line\">            &#125; else &#123;</div><div class=\"line\">                Toast.makeText(this, &quot;选择文件失败&quot;, Toast.LENGTH_SHORT).show();</div><div class=\"line\">            &#125;</div><div class=\"line\">            break;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//FileUtils类</div><div class=\"line\">public class FileUtils &#123;</div><div class=\"line\">\tpublic static String getPath(Context context, Uri uri) &#123;</div><div class=\"line\"></div><div class=\"line\">\t    if (&quot;content&quot;.equalsIgnoreCase(uri.getScheme())) &#123;</div><div class=\"line\">\t        String[] projection = &#123;&quot;_data&quot;&#125;;</div><div class=\"line\">\t        Cursor cursor = null;</div><div class=\"line\"></div><div class=\"line\">\t        try &#123;</div><div class=\"line\">\t            cursor = context.getContentResolver().query(uri, projection, null, null, null);</div><div class=\"line\">\t            int column_index = cursor.getColumnIndexOrThrow(&quot;_data&quot;);</div><div class=\"line\">\t            if (cursor.moveToFirst()) &#123;</div><div class=\"line\">\t                return cursor.getString(column_index);</div><div class=\"line\">\t            &#125;</div><div class=\"line\">\t        &#125; catch (Exception e) &#123;</div><div class=\"line\">\t            // Eat it</div><div class=\"line\">\t        &#125;</div><div class=\"line\">\t    &#125; else if (&quot;file&quot;.equalsIgnoreCase(uri.getScheme())) &#123;</div><div class=\"line\">\t        return uri.getPath();</div><div class=\"line\">\t    &#125;</div><div class=\"line\"></div><div class=\"line\">\t    return null;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"31-FileOutputStream构造函数？\"><a href=\"#31-FileOutputStream构造函数？\" class=\"headerlink\" title=\"31. FileOutputStream构造函数？\"></a>31. FileOutputStream构造函数？</h2><p>方法簽名：</p>\n<blockquote>\n<p>FileOutputStream(f, append);</p>\n</blockquote>\n<p>参数解析：</p>\n<p>第一个参数是文件对象，第二个参数是是否追加数据；</p>\n<h2 id=\"32-Java如何终止线程？\"><a href=\"#32-Java如何终止线程？\" class=\"headerlink\" title=\"32. Java如何终止线程？\"></a>32. Java如何终止线程？</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Override</div><div class=\"line\">public void run() &#123;</div><div class=\"line\">\twhile(flag)&#123; // 通过flag控制</div><div class=\"line\">\t/* do your no-block task */</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>注：Thread中的run()方法，不是start()之后就重复调用run()方法，run()方法也只能运行一次，直到run中的所有方法运行完成</p>\n<h2 id=\"33-double类型保留两位小数\"><a href=\"#33-double类型保留两位小数\" class=\"headerlink\" title=\"33. double类型保留两位小数\"></a>33. double类型保留两位小数</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">DecimalFormat df = new DecimalFormat(&quot;#.00&quot;);  </div><div class=\"line\">df.format(doubleValue);</div></pre></td></tr></table></figure>\n<h2 id=\"34-获取本地文件大小\"><a href=\"#34-获取本地文件大小\" class=\"headerlink\" title=\"34. 获取本地文件大小\"></a>34. 获取本地文件大小</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">long size = 0;</div><div class=\"line\">try &#123;</div><div class=\"line\">    java.io.File file = new java.io.File(filePath);</div><div class=\"line\">    if (file.exists()) &#123;</div><div class=\"line\">        FileInputStream fis = new FileInputStream(file);</div><div class=\"line\">        size = fis.available();</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">\t// file.createNewFile();</div><div class=\"line\">        Log.e(&quot;获取文件大小&quot;, &quot;文件不存在!&quot;);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125; catch (IOException e) &#123;</div><div class=\"line\">    e.printStackTrace();</div><div class=\"line\">&#125;</div><div class=\"line\">return size;</div></pre></td></tr></table></figure>\n<h2 id=\"35-LayoutInflater与MenuInflater\"><a href=\"#35-LayoutInflater与MenuInflater\" class=\"headerlink\" title=\"35. LayoutInflater与MenuInflater\"></a>35. LayoutInflater与MenuInflater</h2><ul>\n<li>LayoutInflater: 解析定义在layout下的布局文件</li>\n<li>MenuInflater: 解析定义在menu目录下的菜单布局文件</li>\n</ul>\n<h2 id=\"36-FTPClient库的使用\"><a href=\"#36-FTPClient库的使用\" class=\"headerlink\" title=\"36. FTPClient库的使用\"></a>36. FTPClient库的使用</h2><h3 id=\"36-1-FTPFile获得文件的大小\"><a href=\"#36-1-FTPFile获得文件的大小\" class=\"headerlink\" title=\"36.1 FTPFile获得文件的大小\"></a>36.1 FTPFile获得文件的大小</h3><p>获得文件大小：file.getSize(); </p>\n<h3 id=\"36-2-连接服务器\"><a href=\"#36-2-连接服务器\" class=\"headerlink\" title=\"36.2 连接服务器\"></a>36.2 连接服务器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ftpClient.connect(&quot;服务器名&quot;,端口号);</div></pre></td></tr></table></figure>\n<h3 id=\"36-3-SocketException\"><a href=\"#36-3-SocketException\" class=\"headerlink\" title=\"36.3 SocketException\"></a>36.3 SocketException</h3><p>具體異常：<br>java.net.SocketException: recvfrom failed: ECONNRESET (Connection reset by peer)</p>\n<p>说明：应该是过度频繁的请求连接导致</p>\n<p>解决方案：ftpClient.setKeepAlive(true);</p>\n<h3 id=\"36-4-ftp反馈码：\"><a href=\"#36-4-ftp反馈码：\" class=\"headerlink\" title=\"36.4 ftp反馈码：\"></a>36.4 ftp反馈码：</h3><blockquote>\n<p>220 Service ready for new user（新连接的用户的服务已就绪)<br>530 Not logged in.</p>\n</blockquote>\n<h3 id=\"36-5-FTPClient-listFiles-不能获取文件，返回数据为空\"><a href=\"#36-5-FTPClient-listFiles-不能获取文件，返回数据为空\" class=\"headerlink\" title=\"36.5 FTPClient.listFiles()不能获取文件，返回数据为空\"></a>36.5 FTPClient.listFiles()不能获取文件，返回数据为空</h3><p>解决方案：调用FTPClient.listFiles()方法前，先调用FTPClient.enterLocalPassiveMode()<br>enterLocalPassiveMode()的意思是每次数据连接之前，ftp client告诉ftp server开通一个端口来传输数据</p>\n<h3 id=\"36-6-ftpClient-changeWorkingDirectory-path-切换目录失败\"><a href=\"#36-6-ftpClient-changeWorkingDirectory-path-切换目录失败\" class=\"headerlink\" title=\"36.6 ftpClient.changeWorkingDirectory(path)切换目录失败\"></a>36.6 ftpClient.changeWorkingDirectory(path)切换目录失败</h3><p>可能原因： 路徑不支持中文</p>\n<p>解决方案：</p>\n<blockquote>\n<p>ftpClient.changeWorkingDirectory(new String(currentPath.getBytes(“GBK”),”ISO-8859-1”))  </p>\n</blockquote>\n<ul>\n<li><p>注：</p>\n<ol>\n<li>FTP.DEFAULT_CONTROL_ENCODING = “ISO-8859-1”,可互换</li>\n<li>getBytes(“GBK”)中的参数”GBK”不能省，否则默认是”UTF-8”</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"36-7-ftpClient-listFiles-path\"><a href=\"#36-7-ftpClient-listFiles-path\" class=\"headerlink\" title=\"36.7 ftpClient.listFiles(path)\"></a>36.7 ftpClient.listFiles(path)</h3><p>path参数不支持中文,解决方案同36.6</p>\n"},{"title":"Windows常见问题","url":"https://bruceyu1994.github.io/2016/10/16/Windows常见问题/","content":"<h2 id=\"win10\"><a href=\"#win10\" class=\"headerlink\" title=\"win10\"></a>win10</h2><h3 id=\"自带中文输入法變繁体了\"><a href=\"#自带中文输入法變繁体了\" class=\"headerlink\" title=\"自带中文输入法變繁体了\"></a>自带中文输入法變繁体了</h3><p>解決方案：Ctrl + Shift + F 快速切换简体和繁体 參考自<a href=\"http://bbs.pcbeta.com/forum.php?mod=viewthread&amp;tid=1705417&amp;highlight=\" target=\"_blank\" rel=\"external\">微软极客社区</a></p>\n"},{"title":"Hexo搭建個人博客","url":"https://bruceyu1994.github.io/2016/10/15/Hexo搭建個人博客/","content":"<h2 id=\"搭建個人博客\"><a href=\"#搭建個人博客\" class=\"headerlink\" title=\"搭建個人博客\"></a>搭建個人博客</h2><h3 id=\"環境配置\"><a href=\"#環境配置\" class=\"headerlink\" title=\"環境配置\"></a>環境配置</h3><h4 id=\"安裝Git\"><a href=\"#安裝Git\" class=\"headerlink\" title=\"安裝Git\"></a>安裝Git</h4><h4 id=\"安裝node-js\"><a href=\"#安裝node-js\" class=\"headerlink\" title=\"安裝node.js\"></a>安裝node.js</h4><h3 id=\"配置Github\"><a href=\"#配置Github\" class=\"headerlink\" title=\"配置Github\"></a>配置Github</h3><h3 id=\"安裝Hexo\"><a href=\"#安裝Hexo\" class=\"headerlink\" title=\"安裝Hexo\"></a>安裝Hexo</h3><ol>\n<li><p>Installation</p>\n<p> 打開Git命令行工具，執行如下命令:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo</div></pre></td></tr></table></figure>\n</li>\n<li><p>Quick Start</p>\n</li>\n</ol>\n<h2 id=\"常見問題\"><a href=\"#常見問題\" class=\"headerlink\" title=\"常見問題\"></a>常見問題</h2><h3 id=\"无法识别带-号的标题\"><a href=\"#无法识别带-号的标题\" class=\"headerlink\" title=\"无法识别带#号的标题\"></a>无法识别带#号的标题</h3><p>如执行如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo n &quot;C#使用&quot;</div></pre></td></tr></table></figure></p>\n<p>则在_posts文件夹下生成”C-使用”，而不是”C#使用”</p>\n<blockquote>\n<p>貌似衹是文件名不支持#號,title生成沒有問題。</p>\n</blockquote>\n<h3 id=\"themes文件fexo主題无法push到Git服務器？\"><a href=\"#themes文件fexo主題无法push到Git服務器？\" class=\"headerlink\" title=\"themes文件fexo主題无法push到Git服務器？\"></a>themes文件fexo主題无法push到Git服務器？</h3><p>具體描述：無法add，執行 <code>git add .</code> 之後還是會提示fexo主題文件夾需要add</p>\n<p>原因：</p>\n<p>解決方案：</p>\n<h3 id=\"部署時出現錯誤\"><a href=\"#部署時出現錯誤\" class=\"headerlink\" title=\"部署時出現錯誤\"></a>部署時出現錯誤</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo d</div><div class=\"line\">ERROR Deployer not found: git</div></pre></td></tr></table></figure>\n<p>可能原因：git部署工具沒有安裝，執行如下命令即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-git --save 改了之后执行，然后再部署试试</div></pre></td></tr></table></figure>\n<h3 id=\"启用搜索页面，却无法进行搜索\"><a href=\"#启用搜索页面，却无法进行搜索\" class=\"headerlink\" title=\"启用搜索页面，却无法进行搜索\"></a>启用搜索页面，却无法进行搜索</h3><p>原因：没有安装 hexo-search 插件</p>\n<p>执行如下命令安装hexo-search插件，即可解决</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-search --save</div></pre></td></tr></table></figure>\n<h3 id=\"warning-LF-will-be-replaced-by-CRLF\"><a href=\"#warning-LF-will-be-replaced-by-CRLF\" class=\"headerlink\" title=\"warning: LF will be replaced by CRLF\"></a>warning: LF will be replaced by CRLF</h3><p>原因：windows中的换行符为 CRLF， 而在Linux下的换行符为LF，所以hexo执行git add . 时出现提示</p>\n<p>解决方案：</p>\n<ol>\n<li>删除你hexo根目录下面的.deploy_git文件夹</li>\n<li>执行 <code>$ git config --global core.autocrlf false</code>  //禁用自动转换</li>\n<li><p>重新执行如下命令，发现已没有之前的警告了</p>\n<p> <code>$ hexo clean</code><br> <code>$ hexo d -g</code></p>\n</li>\n<li><p>打开博客网址，进行验证是否成功</p>\n<p> <a href=\"https://www.zhihu.com/question/38219432/answer/123443945\" target=\"_blank\" rel=\"external\">参考链接</a></p>\n</li>\n</ol>\n<p>注：</p>\n<blockquote>\n<p>CRLF表示句尾使用回车换行两个字符(即我们常在Windows编程时使用”\\r\\n”换行)<br><br>LF表示表示句尾，只使用换行.</p><p><br>CR表示只使用回车.</p>\n</blockquote>\n"},{"title":"C#使用","url":"https://bruceyu1994.github.io/2016/10/15/C-使用/","content":"<h2 id=\"1-模拟登陆\"><a href=\"#1-模拟登陆\" class=\"headerlink\" title=\"1. 模拟登陆\"></a>1. 模拟登陆</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div></pre></td><td class=\"code\"><pre><div class=\"line\">HttpWebRequest request = <span class=\"literal\">null</span>;  <span class=\"comment\">//提供 WebRequest 类的 HTTP 特定的实现。</span></div><div class=\"line\">HttpWebResponse response = <span class=\"literal\">null</span>;    <span class=\"comment\">//提供 WebResponse 类的 HTTP 特定的实现</span></div><div class=\"line\"><span class=\"keyword\">try</span> </div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">//提交的信息，包括用户名和密码等信息</span></div><div class=\"line\">    <span class=\"keyword\">string</span> postdata = <span class=\"string\">\"uid=\"</span> + account + <span class=\"string\">\"&amp;pwd=\"</span> + password;</div><div class=\"line\">    <span class=\"comment\">//抽象类的静态方法可直接调用,初始化新的WebRequest实例化web访问类</span></div><div class=\"line\">    request = (HttpWebRequest)WebRequest.Create(loginUrl);</div><div class=\"line\">    <span class=\"comment\">//request.Credentials:获取或设置请求的身份验证信息;</span></div><div class=\"line\">    <span class=\"comment\">//CredentialCache.DefaultCredentials:获取应用程序的系统凭据,</span></div><div class=\"line\">    <span class=\"comment\">//对于 ASP.NET应用程序，默认凭据是已登录的用户或正被模拟的用户的用户凭据。</span></div><div class=\"line\">    request.Credentials = CredentialCache.DefaultCredentials;</div><div class=\"line\">    request.Method = <span class=\"string\">\"POST\"</span>;<span class=\"comment\">//数据提交方式为POST</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//request.ContentType:获取或设置传入请求的 MIME 内容类型。</span></div><div class=\"line\">    request.ContentType = <span class=\"string\">\"application/x-www-form-urlencoded\"</span>;    <span class=\"comment\">//模拟头 </span></div><div class=\"line\">    <span class=\"comment\">//request.AllowAutoRedirect：获取或设置一个值，该值指示请求是否应跟随重定向响应；</span></div><div class=\"line\">    <span class=\"comment\">//如果请求应自动跟随 Internet 资源的重定向响应，则为 true，否则为 false。默认值为 true。</span></div><div class=\"line\">    request.AllowAutoRedirect = <span class=\"literal\">false</span>;   <span class=\"comment\">// 不用需自动跳转</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//必须设置CookieContainer存储请求返回的Cookies</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (CookieContainer != <span class=\"literal\">null</span>)</div><div class=\"line\">    &#123;</div><div class=\"line\">        request.CookieContainer = CookieContainer;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        request.CookieContainer = <span class=\"keyword\">new</span> CookieContainer();</div><div class=\"line\">        CookieContainer = request.CookieContainer;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//保持TCP连接</span></div><div class=\"line\">    request.KeepAlive = <span class=\"literal\">true</span>;</div><div class=\"line\">    <span class=\"comment\">//提交请求  </span></div><div class=\"line\">    <span class=\"keyword\">byte</span>[] postdatabytes = Encoding.UTF8.GetBytes(postdata); <span class=\"comment\">//对指定字符集进行编码</span></div><div class=\"line\">    request.ContentLength = postdatabytes.Length;</div><div class=\"line\">    Stream stream;</div><div class=\"line\">    stream = request.GetRequestStream();  <span class=\"comment\">//返回一个数据流为HttpWebRequest发送数据</span></div><div class=\"line\">    <span class=\"comment\">//设置POST 数据，向当前流中写入postdatabytes字节序列，其中0为postdatabytes从0开始的字节偏移量</span></div><div class=\"line\">    <span class=\"comment\">//postdatabytes.Length要写入当前流的字节数。</span></div><div class=\"line\">    stream.Write(postdatabytes, <span class=\"number\">0</span>, postdatabytes.Length); </div><div class=\"line\">    stream.Close();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//接收响应</span></div><div class=\"line\">    response = (HttpWebResponse)request.GetResponse(); <span class=\"comment\">//返回对 Internet 请求的响应。</span></div><div class=\"line\">    <span class=\"comment\">//获取包含与特定 URI（request.RequestUri） 关联的 Cookie 实例的 CookieCollection。</span></div><div class=\"line\">    response.Cookies = request.CookieContainer.GetCookies(request.RequestUri);</div><div class=\"line\">    CookieCollection cook = response.Cookies;</div><div class=\"line\">    <span class=\"comment\">//返回一个 HTTP Cookie 标头，其中包含表示由分号分隔的与特定 URI 关联的Cookie 实例的字符串。</span></div><div class=\"line\">    <span class=\"keyword\">string</span> strcookieheader = request.CookieContainer.GetCookieHeader(request.RequestUri);</div><div class=\"line\">    CookiesString = strcookieheader;</div><div class=\"line\">    <span class=\"comment\">//取下一次GET跳转地址  </span></div><div class=\"line\">    <span class=\"comment\">//实现一个 TextReader，使其以gb2312编码从字节流中读取字符。</span></div><div class=\"line\">    StreamReader sr = <span class=\"keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(<span class=\"string\">\"gb2312\"</span>));</div><div class=\"line\">    <span class=\"keyword\">string</span> content = sr.ReadToEnd(); <span class=\"comment\">//读取来自流的当前位置到结尾的所有字符。</span></div><div class=\"line\">    sr.Close(); <span class=\"comment\">//关闭 StreamReader 对象和基础流，并释放与读取器关联的所有系统资源</span></div><div class=\"line\">    request.Abort();    <span class=\"comment\">//取消对 Internet 资源的请求。</span></div><div class=\"line\">    response.Close();   <span class=\"comment\">//Close 方法关闭响应流，并通过其他请求将释放与重复使用的资源的连接。</span></div><div class=\"line\">    <span class=\"comment\">//依据登陆成功后返回的Page信息，求出下次请求的url</span></div><div class=\"line\">    <span class=\"comment\">//每个网站登陆后加载的Url和顺序不尽相同，以下两步需根据实际情况做特殊处理，从而得到下次请求的URL</span></div><div class=\"line\">    <span class=\"keyword\">string</span>[] substr = content.Split(<span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[] &#123; <span class=\"string\">'\"'</span> &#125;);</div><div class=\"line\">    NextRequestUrl = <span class=\"string\">\"http://zcgl.wzu.edu.cn/plat/\"</span> + substr[<span class=\"number\">1</span>];   </div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">catch</span> (WebException ex)</div><div class=\"line\">&#123;</div><div class=\"line\">    MessageBox.Show(<span class=\"keyword\">string</span>.Format(<span class=\"string\">\"登陆时出错，详细信息：&#123;0&#125;\"</span>, ex.Message));</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>补充：</p>\n<ul>\n<li>CookieContainer: 装载返回的cookies的容器</li>\n<li><p>form的enctype属性为编码方式，分两种：  </p>\n<ol>\n<li><p>application/x-www-form-urlencoded，默认值。action为get时，把form数据转换成一个字串（name1=value1&amp;name2=value2…），append到url后面，用?分割；当action为post时，浏览器把form数据封装到http body中，然后发送到server。  </p>\n</li>\n<li><p>multipart/form-data，type=file时使用，浏览器会把整个表单以控件为单位分割，并为每个部分加上Content-Disposition(form-data或者file),Content-Type(默认为text/plain),name(控件name)等信息，并加上分割符(boundary)。</p>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"2-获取指定页面的内容\"><a href=\"#2-获取指定页面的内容\" class=\"headerlink\" title=\"2. 获取指定页面的内容\"></a>2. 获取指定页面的内容</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\">HttpWebRequest request = <span class=\"literal\">null</span>;</div><div class=\"line\">HttpWebResponse response = <span class=\"literal\">null</span>;</div><div class=\"line\"><span class=\"keyword\">try</span></div><div class=\"line\">&#123;</div><div class=\"line\">    request = (HttpWebRequest)WebRequest.Create(NextRequestUrl);</div><div class=\"line\">    request.Credentials = CredentialCache.DefaultCredentials;</div><div class=\"line\">    request.Method = <span class=\"string\">\"GET\"</span>;</div><div class=\"line\">    request.KeepAlive = <span class=\"literal\">true</span>;</div><div class=\"line\">    request.Headers.Add(<span class=\"string\">\"Cookie:\"</span> + CookiesString);</div><div class=\"line\">    request.CookieContainer = CookieContainer;</div><div class=\"line\">    request.AllowAutoRedirect = <span class=\"literal\">false</span>;</div><div class=\"line\">    response = (HttpWebResponse)request.GetResponse();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//设置cookie  </span></div><div class=\"line\">    CookiesString = request.CookieContainer.GetCookieHeader(request.RequestUri);</div><div class=\"line\">    <span class=\"comment\">//取再次跳转链接  </span></div><div class=\"line\">    StreamReader sr = <span class=\"keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(<span class=\"string\">\"gb2312\"</span>));</div><div class=\"line\">    <span class=\"keyword\">string</span> ss = sr.ReadToEnd();</div><div class=\"line\">    sr.Close();</div><div class=\"line\">    request.Abort();</div><div class=\"line\">    response.Close();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//依据登陆成功后返回的Page信息，求出下次请求的url</span></div><div class=\"line\">    <span class=\"comment\">//每个网站登陆后加载的Url和顺序不尽相同，以下两步需根据实际情况做特殊处理，从而得到下次请求的URL</span></div><div class=\"line\">    <span class=\"comment\">//string[] substr = ss.Split(new char[] &#123; '\"' &#125;);</span></div><div class=\"line\">    <span class=\"comment\">//NextRequestUrl = substr[1];</span></div><div class=\"line\">    <span class=\"comment\">//NextRequestUrl = \"http://zcgl.wzu.edu.cn/plat/\" + substr[1];</span></div><div class=\"line\">    ResultHtml = ss;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">catch</span> (WebException ex)</div><div class=\"line\">&#123;</div><div class=\"line\">    MessageBox.Show(<span class=\"keyword\">string</span>.Format(<span class=\"string\">\"获取页面HTML信息出错，详细信息：&#123;0&#125;\"</span>, ex.Message));</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"3-正則匹配\"><a href=\"#3-正則匹配\" class=\"headerlink\" title=\"3. 正則匹配\"></a>3. 正則匹配</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Instrument <span class=\"title\">GetInstrumentInfo</span>(<span class=\"params\">String InstrumentNum</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    Match m = Regex.Match(str, pattern);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> (m.Success)</div><div class=\"line\">    &#123;</div><div class=\"line\">        Instrument instrument = <span class=\"keyword\">new</span> Instrument();</div><div class=\"line\">        instrument.Number = InstrumentNum;</div><div class=\"line\">        instrument.Unit = m.Groups[<span class=\"number\">1</span>].ToString();</div><div class=\"line\">        instrument.Univalence = m.Groups[<span class=\"number\">2</span>].ToString();</div><div class=\"line\">        instrument.Name = m.Groups[<span class=\"number\">3</span>].ToString();</div><div class=\"line\">        <span class=\"keyword\">return</span> instrument;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"4-用zxing库生成二维码\"><a href=\"#4-用zxing库生成二维码\" class=\"headerlink\" title=\"4. 用zxing库生成二维码\"></a>4. 用zxing库生成二维码</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//C#代码</span></div><div class=\"line\"><span class=\"keyword\">using</span> com.google.zxing;</div><div class=\"line\"><span class=\"keyword\">using</span> ByteMatrix = com.google.zxing.common.ByteMatrix;</div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 生成二维码</span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateQRCode</span>(<span class=\"params\"></span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">//构造二维码内容</span></div><div class=\"line\">    <span class=\"keyword\">string</span> content =</div><div class=\"line\">        Num_columnHeader.Text + <span class=\"string\">\"：\"</span> + Info_listView.Items[<span class=\"number\">1</span>].SubItems[<span class=\"number\">0</span>].Text + <span class=\"string\">\"\\n\"</span> +</div><div class=\"line\">        Name_columnHeader.Text + <span class=\"string\">\"：\"</span> + Info_listView.Items[<span class=\"number\">1</span>].SubItems[<span class=\"number\">1</span>].Text + <span class=\"string\">\"\\n\"</span> +</div><div class=\"line\">        Person_columnHeader.Text + <span class=\"string\">\"：\"</span> + Info_listView.Items[<span class=\"number\">1</span>].SubItems[<span class=\"number\">2</span>].Text + <span class=\"string\">\"\\n\"</span> +</div><div class=\"line\">        Place_columnHeader.Text + <span class=\"string\">\"：\"</span> + Info_listView.Items[<span class=\"number\">1</span>].SubItems[<span class=\"number\">3</span>].Text + <span class=\"string\">\"\\n\"</span> +</div><div class=\"line\">        Type_columnHeader.Text + <span class=\"string\">\"：\"</span> + Info_listView.Items[<span class=\"number\">1</span>].SubItems[<span class=\"number\">4</span>].Text + <span class=\"string\">\"\\n\"</span> +</div><div class=\"line\">        Univalence_columnHeader.Text + <span class=\"string\">\"：\"</span> + Info_listView.Items[<span class=\"number\">1</span>].SubItems[<span class=\"number\">5</span>].Text + <span class=\"string\">\"\\n\"</span> +</div><div class=\"line\">        Date_columnHeader.Text + <span class=\"string\">\"：\"</span> + Info_listView.Items[<span class=\"number\">1</span>].SubItems[<span class=\"number\">6</span>].Text;</div><div class=\"line\"></div><div class=\"line\">    ByteMatrix byteMatrix = <span class=\"keyword\">new</span> MultiFormatWriter().encode(content, BarcodeFormat.QR_CODE, <span class=\"number\">200</span>, <span class=\"number\">200</span>);</div><div class=\"line\">    Bitmap bitmap = toBitmap(byteMatrix);</div><div class=\"line\">    QRCode_pictureBox.Image = bitmap;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"5-用zxing库生成条形码\"><a href=\"#5-用zxing库生成条形码\" class=\"headerlink\" title=\"5. 用zxing库生成条形码\"></a>5. 用zxing库生成条形码</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 生成条形码</span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateBarCode</span>(<span class=\"params\"><span class=\"keyword\">string</span> content</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    Regex rg = <span class=\"keyword\">new</span> Regex(<span class=\"string\">@\"^\\d&#123;8&#125;$\"</span>);</div><div class=\"line\">    <span class=\"keyword\">if</span>(rg.IsMatch(content))</div><div class=\"line\">    &#123;</div><div class=\"line\">        ByteMatrix byteMatrix = <span class=\"keyword\">new</span> MultiFormatWriter().encode(content, BarcodeFormat.EAN_8, <span class=\"number\">200</span>, <span class=\"number\">30</span>);</div><div class=\"line\">        Bitmap bitmap = toBitmap(byteMatrix);</div><div class=\"line\">        BarCodeList.Add(bitmap);</div><div class=\"line\">        QRCode_pictureBox.Image = bitmap;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        MessageBox.Show(<span class=\"string\">\"非数字，无法生成条形码\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125; </div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 生成位图</span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=\"byteMatrix\"&gt;</span><span class=\"doctag\">&lt;/param&gt;</span></span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> Bitmap <span class=\"title\">toBitmap</span>(<span class=\"params\">ByteMatrix byteMatrix</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> width = byteMatrix.Width;</div><div class=\"line\">    <span class=\"keyword\">int</span> height = byteMatrix.Height;</div><div class=\"line\">    Bitmap bitmap = <span class=\"keyword\">new</span> Bitmap(width, height, System.Drawing.Imaging.PixelFormat.Format32bppArgb);</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt; width; i++)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j &lt; height; j++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            bitmap.SetPixel(i, j, byteMatrix.get_Renamed(i, j) != <span class=\"number\">-1</span> ? ColorTranslator.FromHtml(<span class=\"string\">\"#436EEE\"</span>) : ColorTranslator.FromHtml(<span class=\"string\">\"#C7C7C7\"</span>));</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> bitmap;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"6-listView顯示信息\"><a href=\"#6-listView顯示信息\" class=\"headerlink\" title=\"6. listView顯示信息\"></a>6. listView顯示信息</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//向listView中添加内容</span></div><div class=\"line\">ListViewItem lvi = <span class=\"keyword\">new</span> ListViewItem(str0);</div><div class=\"line\">lvi.SubItems.Add(str1);</div><div class=\"line\">Info_listView.Items.Add(lvi);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//读取listView列标题内容</span></div><div class=\"line\"><span class=\"keyword\">string</span> str = columnHeader.Text;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//读取listView中的index1行，index2+1列的内容</span></div><div class=\"line\"><span class=\"keyword\">string</span> str = Info_listView.Items[index1].SubItems[index2].Text;</div></pre></td></tr></table></figure>\n<h2 id=\"7-listView刪除\"><a href=\"#7-listView刪除\" class=\"headerlink\" title=\"7. listView刪除\"></a>7. listView刪除</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//删除一条记录</span></div><div class=\"line\"><span class=\"keyword\">if</span> (Info_listView.Items.Count &gt; <span class=\"number\">0</span>)</div><div class=\"line\">&#123;</div><div class=\"line\">    Info_listView.Items.Remove(Info_listView.FocusedItem);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//删除多条记录</span></div><div class=\"line\"><span class=\"keyword\">if</span> (Info_listView.Items.Count &gt; <span class=\"number\">0</span>)</div><div class=\"line\">&#123;</div><div class=\"line\">    Info_listView.MultiSelect = <span class=\"literal\">true</span>;</div><div class=\"line\">    <span class=\"keyword\">foreach</span> (ListViewItem item <span class=\"keyword\">in</span> Info_listView.Items)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (item.Selected)</div><div class=\"line\">            item.Remove();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//清空</span></div><div class=\"line\"><span class=\"keyword\">if</span> (Info_listView.Items.Count &gt; <span class=\"number\">0</span>)</div><div class=\"line\">&#123;</div><div class=\"line\">    Info_listView.Items.Clear();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"8-listView显示圖片\"><a href=\"#8-listView显示圖片\" class=\"headerlink\" title=\"8. listView显示圖片\"></a>8. listView显示圖片</h2><blockquote>\n<p>listView有5种视图:LargeIcon, SmallIcon, List, Details, Tile<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//listView显示图片,视图为LargeIcon</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">showCode</span>(<span class=\"params\"></span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (QRCodeList.Count &gt; <span class=\"number\">0</span>)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">//QRCode_listView属性设置</span></div><div class=\"line\">        QRCode_listView.View = View.LargeIcon;</div><div class=\"line\">        QRCode_listView.LargeImageList = QRCode_imageList;</div><div class=\"line\">        QRCode_listView.BeginUpdate();</div><div class=\"line\"></div><div class=\"line\">        QRCode_listView.LargeImageList.ImageSize = <span class=\"keyword\">new</span> System.Drawing.Size(<span class=\"number\">200</span>, <span class=\"number\">200</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; QRCodeList.Count; i++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            QRCode_imageList.Images.Add(QRCodeList[i]);</div><div class=\"line\">            ListViewItem lvi = <span class=\"keyword\">new</span> ListViewItem(Info_listView.Items[i].SubItems[<span class=\"number\">0</span>].Text);</div><div class=\"line\">            QRCode_listView.Items.Add(lvi);</div><div class=\"line\">            QRCode_listView.Items[i].ImageIndex = QRCode_imageList.Images.Count - <span class=\"number\">1</span> ;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        QRCode_listView.EndUpdate();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"9-保存图片\"><a href=\"#9-保存图片\" class=\"headerlink\" title=\"9. 保存图片\"></a>9. 保存图片</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">FolderBrowserDialog folderDlg = <span class=\"keyword\">new</span> FolderBrowserDialog();</div><div class=\"line\">folderDlg.Description = <span class=\"string\">\"请选择文件夹\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> (folderDlg.ShowDialog() == DialogResult.OK)</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">string</span> path = folderDlg.SelectedPath;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; QRCodeList.Count; i++)</div><div class=\"line\">    &#123;</div><div class=\"line\">        QRCodeList[i].Save(path + <span class=\"string\">@\"\\\"</span> + Info_listView.Items[i].SubItems[<span class=\"number\">0</span>].Text + <span class=\"string\">\".bmp\"</span>, System.Drawing.Imaging.ImageFormat.Bmp);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"10-VS2013工程資源文件的保存和使用\"><a href=\"#10-VS2013工程資源文件的保存和使用\" class=\"headerlink\" title=\"10. VS2013工程資源文件的保存和使用\"></a>10. VS2013工程資源文件的保存和使用</h2><p><a href=\"http://blog.csdn.net/mengdong_zy/article/details/8971154\" target=\"_blank\" rel=\"external\">C#将图片保存到资源文件并调用</a></p>\n<h2 id=\"11-網絡請求重定向\"><a href=\"#11-網絡請求重定向\" class=\"headerlink\" title=\"11. 網絡請求重定向\"></a>11. 網絡請求重定向</h2><p>在通过get和post获取网络数据时，如果遇到重定向的网址，一定要把HttpWebRequest的重定向参数值设为true,并重新获取当前页面的Cookie<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">request.AllowAutoRedirect = <span class=\"literal\">true</span>;</div><div class=\"line\">response = (HttpWebResponse)request.GetResponse();</div><div class=\"line\"><span class=\"comment\">//获取cookie  </span></div><div class=\"line\">CookiesString = request.CookieContainer.GetCookieHeader(request.RequestUri);</div></pre></td></tr></table></figure></p>\n<h2 id=\"12-ListView添加checkBox問題\"><a href=\"#12-ListView添加checkBox問題\" class=\"headerlink\" title=\"12. ListView添加checkBox問題\"></a>12. ListView添加checkBox問題</h2><p>取消某一个已选中的项，會取消所有已选中的项，在网上找的参考代码在ItemChecked方法中多了一句代码：<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">e.Item.Selected = e.Item.Checked;</div></pre></td></tr></table></figure></p>\n<p>將这句代码的意思应该是把checked的复选框也设制为selected的，注釋該劇代碼就解決了。</p>\n<h2 id=\"13-设置窗体不能拉大或拖小\"><a href=\"#13-设置窗体不能拉大或拖小\" class=\"headerlink\" title=\"13. 设置窗体不能拉大或拖小\"></a>13. 设置窗体不能拉大或拖小</h2><p>將FormBorderStyle設爲为Fix即可，如Fix3D;</p>\n<h2 id=\"14-Base64编码解码\"><a href=\"#14-Base64编码解码\" class=\"headerlink\" title=\"14. Base64编码解码\"></a>14. Base64编码解码</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 編碼</span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=\"data\"&gt;</span>需要編碼的数据<span class=\"doctag\">&lt;/param&gt;</span></span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">string</span> <span class=\"title\">Encode</span>(<span class=\"params\"><span class=\"keyword\">string</span> data</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    System.Text.Encoding encode = System.Text.Encoding.UTF8;</div><div class=\"line\">    <span class=\"keyword\">byte</span>[] bytedata = encode.GetBytes(data);</div><div class=\"line\">    <span class=\"keyword\">string</span> result = Convert.ToBase64String(bytedata, <span class=\"number\">0</span>, bytedata.Length);</div><div class=\"line\">    <span class=\"keyword\">return</span> result;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> 解碼</span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name=\"data\"&gt;</span>需要解碼的数据<span class=\"doctag\">&lt;/param&gt;</span></span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span><span class=\"doctag\">&lt;/returns&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">string</span> <span class=\"title\">Decode</span>(<span class=\"params\"><span class=\"keyword\">string</span> data</span>)</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">byte</span>[] bpath = Convert.FromBase64String(data);</div><div class=\"line\">    <span class=\"keyword\">string</span> result = System.Text.ASCIIEncoding.UTF8.GetString(bpath);</div><div class=\"line\">    <span class=\"keyword\">return</span> result;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>拓展：<a href=\"http://www.cnblogs.com/chengxiaohui/articles/3951129.html\" target=\"_blank\" rel=\"external\">从原理上搞定编码– Base64编码</a></p>\n"},{"title":"软件开发流程","url":"https://bruceyu1994.github.io/2016/10/15/软件开发流程/","content":"<p><strong><em>参考自<a href=\"http://baike.baidu.com/link?url=cD6VLiJSqMkCLSe-7X6yB5oapMb5aD3_Vgh0PsVGkTaE8pd5rvKXUGEfKpIkZB_xnZyZ1z7Zb9WW5wwnO5mMrCaHgDhu-Nl-k8IQuNeXxyIVEhCHNrxNyrk-84CnGqU44iLJa4F3Vswkm6aYCAYK5a\" target=\"_blank\" rel=\"external\">百度百科</a></em></strong></p>\n<h2 id=\"需求分析\"><a href=\"#需求分析\" class=\"headerlink\" title=\"需求分析\"></a>需求分析</h2><ol>\n<li>了解需求</li>\n<li>大功能</li>\n<li>小功能</li>\n<li>用户群体</li>\n</ol>\n<h2 id=\"系统设计\"><a href=\"#系统设计\" class=\"headerlink\" title=\"系统设计\"></a>系统设计</h2><ol>\n<li>基本处理流程</li>\n<li>系统组织结构</li>\n<li>模块划分</li>\n<li>功能分配</li>\n<li>接口设计</li>\n<li>运行设计</li>\n<li>数据结构设计</li>\n<li>出错处理设计</li>\n</ol>\n<h2 id=\"详细设计\"><a href=\"#详细设计\" class=\"headerlink\" title=\"详细设计\"></a>详细设计</h2><ol>\n<li>算法</li>\n<li>数据结构</li>\n<li>类的层次结构及调用关系</li>\n</ol>\n<blockquote>\n<p>PS: 应当足够详细，能够根据详细设计进行编码</p>\n</blockquote>\n<h2 id=\"编码\"><a href=\"#编码\" class=\"headerlink\" title=\"编码\"></a>编码</h2><ul>\n<li>实现各模块功能</li>\n</ul>\n<blockquote>\n<p>PS: 通常占软件开发1/3的时间</p>\n</blockquote>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><ol>\n<li>按照执行方：内部测试/外部测试</li>\n<li>按照测试范围： 模块测试/整体联调</li>\n<li>按照条件： 正常操作情况测试/异常操作情况测试</li>\n<li>按照测试输入范围： 全覆盖测试/抽样测试</li>\n</ol>\n<blockquote>\n<p>PS: 测试同样是项目研发中一个相当重要步骤</p>\n</blockquote>\n<h2 id=\"软件交付\"><a href=\"#软件交付\" class=\"headerlink\" title=\"软件交付\"></a>软件交付</h2><ol>\n<li>目标程序</li>\n<li>数据字典</li>\n<li>《用户使用指南》</li>\n<li>需求报告</li>\n<li>设计报告</li>\n<li>测试报告</li>\n</ol>\n<h2 id=\"验收\"><a href=\"#验收\" class=\"headerlink\" title=\"验收\"></a>验收</h2><h2 id=\"维护\"><a href=\"#维护\" class=\"headerlink\" title=\"维护\"></a>维护</h2><ul>\n<li>需求/环境变化 –&gt; 全部/部分修改</li>\n</ul>\n"},{"title":"Markdown 常见问题","url":"https://bruceyu1994.github.io/2016/10/15/Markdown-常见问题/","content":"<h2 id=\"添加图片\"><a href=\"#添加图片\" class=\"headerlink\" title=\"添加图片\"></a>添加图片</h2><ol>\n<li><p>方法一</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">center</span>&gt;</span></span></div><div class=\"line\"><span class=\"code\">\t![图片说明](https://coding.net/u/bruceyu1994/p/Images/git/raw/master/goldfish.jpg \"金鱼\")</span></div><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">center</span>&gt;</span></span></div></pre></td></tr></table></figure>\n</li>\n<li><p>方法二</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">align</span>=<span class=\"string\">\"center\"</span>&gt;</span></span> </div><div class=\"line\"><span class=\"code\">\t&lt;img src=\"https://coding.net/u/bruceyu1994/p/Images/git/raw/master/goldfish.jpg\" alt=\"CSDN图标\" /&gt; </span></div><div class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"换行\"><a href=\"#换行\" class=\"headerlink\" title=\"换行\"></a>换行</h2><ul>\n<li><p\\>:换行并加一行空白行</p\\></li>\n<li>连续两个空格 会变成一个 <br></li>\n</ul>\n<p><a href=\"http://lutaf.com/markdown-simple-usage.htm\" target=\"_blank\" rel=\"external\">参考链接</a></p>\n<h2 id=\"Markdown哲学\"><a href=\"#Markdown哲学\" class=\"headerlink\" title=\"Markdown哲学\"></a>Markdown哲学</h2><p>内容與樣式分開，让思绪自由流畅不受阻，让创作回归内容本身。</p>\n"},{"title":"Gprinter打印机驱动安装及设置","url":"https://bruceyu1994.github.io/2016/10/15/Gprinter打印机驱动安装及设置/","content":"<h2 id=\"驱动安装\"><a href=\"#驱动安装\" class=\"headerlink\" title=\"驱动安装\"></a>驱动安装</h2><ol>\n<li><p>找到驱动文件根目录下的Drivers文件夹并进入，双击“PrnInst.exe”，进入安装向导欢迎界面，如下图所示。</p>\n<center><br> <img src=\"https://coding.net/u/bruceyu1994/p/Images/git/raw/master/Gprinter/PrnInst%2520-%2520Step01.jpg\" alt=\"Step 1\"><br></center>\n</li>\n<li><p>点击“下一步”，进入选项界面，如下图所示</p>\n<center><br> <img src=\"https://coding.net/u/bruceyu1994/p/Images/git/raw/master/Gprinter/PrnInst%2520-%2520Step02.jpg\" alt=\"Step 1\"><br></center>\n</li>\n<li><p>点击“安装打印机”，进入“选择打印机界面”，如图所示，选择“GP-9034T”,点击“下一步”。</p>\n<center><br> <img src=\"https://coding.net/u/bruceyu1994/p/Images/git/raw/master/Gprinter/PrnInst%2520-%2520Step03.jpg\" alt=\"Step 1\"><br></center>\n</li>\n<li><p>进入打印机名称、端口和语言设置界面，端口选择“USB001”,语言默认简体中文，和名称一样默认，点击完成即可完成安装。</p>\n<center><br> <img src=\"https://coding.net/u/bruceyu1994/p/Images/git/raw/master/Gprinter/PrnInst%2520-%2520Step04.jpg\" alt=\"Step 1\"><br></center>\n\n</li>\n</ol>\n<h2 id=\"驱动设置\"><a href=\"#驱动设置\" class=\"headerlink\" title=\"驱动设置\"></a>驱动设置</h2><ol>\n<li><p>进入系统设备和打印机，右击“Gprinter”打印机，选择“打印机首选项”，进入打印机首选项设置界面，如下图所示；</p>\n<center><br> <img src=\"https://coding.net/u/bruceyu1994/p/Images/git/raw/master/Gprinter/PrnInst%2520-%2520Step05.jpg\" alt=\"Step 1\"><br></center>\n</li>\n<li><p>在“选项”Tab页面，打印速度设为5cm/s，打印浓度设为9，标签格式选择cm,宽度设为5，高度设为3，点击应用按钮；</p>\n<center><br> <img src=\"https://coding.net/u/bruceyu1994/p/Images/git/raw/master/Gprinter/PrnInst%2520-%2520Step06.jpg\" alt=\"Step 1\"><br></center>\n</li>\n<li><p>进入高级设置Tab页，感测器类型选择“间距”，介质设置为“缺省设置”，选项选择“撕纸”，点击应用按钮；</p>\n<center><br> <img src=\"https://coding.net/u/bruceyu1994/p/Images/git/raw/master/Gprinter/PrnInst%2520-%2520Step07.jpg\" alt=\"Step 1\"><br></center>\n</li>\n<li><p>进入“抖动Tab页”，抖动类型选择“无”，点击应用按钮；到此设置完成，点击确定按钮，保存所有设置。</p>\n<center><br> <img src=\"https://coding.net/u/bruceyu1994/p/Images/git/raw/master/Gprinter/PrnInst%2520-%2520Step08.jpg\" alt=\"Step 1\"><br></center>\n</li>\n</ol>\n"},{"title":"Git常见问题","url":"https://bruceyu1994.github.io/2016/10/14/Git常见问题/","content":"<h2 id=\"1-fatal-remote-origin-already-exists\"><a href=\"#1-fatal-remote-origin-already-exists\" class=\"headerlink\" title=\"1. fatal: remote origin already exists\"></a>1. fatal: remote origin already exists</h2><p>运行如下命令时；<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git remote add origin git@git.coding.net:bruceyu1994/blog.git</div><div class=\"line\">fatal: remote origin already exists.</div></pre></td></tr></table></figure></p>\n<ul>\n<li>问题描述：远程origin仓库已经存在</li>\n<li><p>原因：在仓库创建之后，已经执行过此操作</p>\n</li>\n<li><p>解决方案：<a href=\"http://blog.csdn.net/dengjianqiang2011/article/details/9260435\" target=\"_blank\" rel=\"external\">参考网址</a></p>\n</li>\n</ul>\n<ol>\n<li>先输入$ git remote rm origin</li>\n<li>再输入$ git remote add origin git@git.coding.net:bruceyu1994/blog.git</li>\n</ol>\n<h2 id=\"2-warning-LF-will-be-replaced-by-CRLF\"><a href=\"#2-warning-LF-will-be-replaced-by-CRLF\" class=\"headerlink\" title=\"2. warning: LF will be replaced by CRLF\"></a>2. warning: LF will be replaced by CRLF</h2><p>运行如下命令时；<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git add .</div><div class=\"line\">warning: LF will be replaced by CRLF in _config.yml.</div><div class=\"line\">The file will have its original line endings in your working directory.</div></pre></td></tr></table></figure></p>\n<ul>\n<li><p>原因分析：<br>CRLF – Carriage-Return Line-Feed 回车换行<br>就是回车(CR, ASCII 13, \\r) 换行(LF, ASCII 10, \\n)。<br>这两个ACSII字符不会在屏幕有任何输出，但在Windows中广泛使用来标识一行的结束。而在Linux/UNIX系统中只有换行符。<br>也就是说在windows中的换行符为 CRLF， 而在linux下的换行符为：LF<br>当使用git来生成一个工程后，文件中的换行符为LF， 当执行git add .时，系统提示：LF 将被转换成 CRLF</p>\n</li>\n<li><p>解决方案：<a href=\"http://blog.csdn.net/u011935939/article/details/50624791\" target=\"_blank\" rel=\"external\">参考网址</a><br>运行如下命令时；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config core.autocrlf false</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"3-如何退出編輯模式\"><a href=\"#3-如何退出編輯模式\" class=\"headerlink\" title=\"3. 如何退出編輯模式\"></a>3. 如何退出編輯模式</h2><p>命令模式下输入“ZZ”命令即可</p>\n<h2 id=\"4-執行push命令時出現錯誤\"><a href=\"#4-執行push命令時出現錯誤\" class=\"headerlink\" title=\"4. 執行push命令時出現錯誤\"></a>4. 執行push命令時出現錯誤</h2><p>具體錯誤:</p>\n<blockquote>\n<p>Updates were rejected because the remote contains work that you do</p>\n</blockquote>\n<p>原因：远程仓库比本地版本更新，所以需要先git pull,然后才能git push</p>\n"},{"title":"Sublime Text 3常见问题","url":"https://bruceyu1994.github.io/2016/10/14/Sublime-Text-3常见问题/","content":"<h2 id=\"1-OmniMarkupPreviwer插件\"><a href=\"#1-OmniMarkupPreviwer插件\" class=\"headerlink\" title=\"1. OmniMarkupPreviwer插件\"></a>1. OmniMarkupPreviwer插件</h2><p>Ctrl+Alt+O: Preview Markup in Browser. 出现如下错误:</p>\n<p>Error: 404 Not Found</p>\n<p>Sorry, the requested URL ‘<a href=\"http://127.0.0.1:51004/view/28\" target=\"_blank\" rel=\"external\">http://127.0.0.1:51004/view/28</a>‘ caused an error:</p>\n<p>‘buffer_id(28) is not valid (closed or unsupported file format)’</p>\n<p><strong>NOTE:</strong> If you run multiple instances of Sublime Text, you may want to adjust<br>the <code>server_port</code> option in order to get this plugin work again.</p>\n<ul>\n<li>解决方法 <a href=\"http://stackoverflow.com/questions/35798823/omnimarkuppreviewer-404\" target=\"_blank\" rel=\"external\">参考网址</a></li>\n</ul>\n<p>Sublime Text &gt; Preferences &gt; Package Settings &gt; OmniMarkupPreviewer &gt; Settings - User</p>\n<p>paste the following to remove the strikeout package.<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"attr\">\"renderer_options-MarkdownRenderer\"</span>: &#123;</div><div class=\"line\">        <span class=\"attr\">\"extensions\"</span>: [<span class=\"string\">\"tables\"</span>, <span class=\"string\">\"fenced_code\"</span>, <span class=\"string\">\"codehilite\"</span>]</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"2-自带代码格式化\"><a href=\"#2-自带代码格式化\" class=\"headerlink\" title=\"2. 自带代码格式化\"></a>2. 自带代码格式化</h2><p>全选代码，Edit  -&gt;  Line  -&gt;  Reindent<br>只是sublime并没有给他赋予快捷键，所以只需加上快捷键即可</p>\n<ul>\n<li>添加快捷键<br>Preference  -&gt;  Key Bindings - User<br>中括号内添加如下内容；<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">[</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\t<span class=\"attr\">\"keys\"</span>   :[<span class=\"string\">\"ctrl+shift+f\"</span>],</div><div class=\"line\">\t\t<span class=\"attr\">\"command\"</span>:<span class=\"string\">\"reindent\"</span></div><div class=\"line\">\t&#125;</div><div class=\"line\">]</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"sublime-text3-注册码\"><a href=\"#sublime-text3-注册码\" class=\"headerlink\" title=\"sublime text3 注册码\"></a>sublime text3 注册码</h2><p><a href=\"http://blog.sina.com.cn/s/blog_7f5571aa0102w3xq.html\" target=\"_blank\" rel=\"external\">sublime text3 注册码</a></p>\n<h2 id=\"sublime-text-3-快捷键大全\"><a href=\"#sublime-text-3-快捷键大全\" class=\"headerlink\" title=\"sublime text 3 快捷键大全\"></a>sublime text 3 快捷键大全</h2><p><a href=\"http://www.jb51.net/softjc/180873.html\" target=\"_blank\" rel=\"external\">sublime text 3 快捷键大全</a></p>\n<h2 id=\"HTML-CSS-JS格式化插件\"><a href=\"#HTML-CSS-JS格式化插件\" class=\"headerlink\" title=\"HTML/CSS/JS格式化插件\"></a>HTML/CSS/JS格式化插件</h2><blockquote>\n<p>HTML-CSS-JS Prettify</p>\n</blockquote>\n<p><a href=\"http://blog.csdn.net/qdujunjie/article/details/38805835\" target=\"_blank\" rel=\"external\">参考网址</a></p>\n"},{"title":"RSS","url":"https://bruceyu1994.github.io/RSS/index.html","content":""},{"title":"about","url":"https://bruceyu1994.github.io/about/index.html","content":""},{"title":"","url":"https://bruceyu1994.github.io/css/personal-style.css","content":"@font-face {\n  font-family: \"Meiryo\";\n  src: url(\"/fonts/Meiryo.eot\");\n  /* IE9 */\n  src: url(\"/fonts/Meiryo.eot?#iefix\") format(\"embedded-opentype\"), /* IE6-IE8 */\n  url(\"/fonts/Meiryo.woff\") format(\"woff\"), /* chrome, firefox */\n  url(\"/fonts/Meiryo.ttf\") format(\"truetype\"), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */\n  url(\"/fonts/Meiryo.svg#Meiryo\") format(\"svg\");\n  /* iOS 4.1- */\n  font-style: normal;\n  font-weight: normal;\n}\nhtml.page-home {\n  /*position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: url('/images/bg.jpg');\n  background-color: transparent;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;*/\n  /*background-image: url('/images/bg.jpg')*/\n\n  /*background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);*/\n  /*background-blend-mode: screen;*/\n\n  /*background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}"},{"title":"link","url":"https://bruceyu1994.github.io/link/index.html","content":""},{"title":"category","url":"https://bruceyu1994.github.io/category/index.html","content":""},{"title":"project","url":"https://bruceyu1994.github.io/project/index.html","content":""},{"title":"search","url":"https://bruceyu1994.github.io/search/index.html","content":""},{"title":"tag","url":"https://bruceyu1994.github.io/tag/index.html","content":""}]